"use strict";(()=>{var t={};t.id=914,t.ids=[914],t.modules={517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5957:(t,e,s)=>{s.r(e),s.d(e,{headerHooks:()=>m,originalPathname:()=>y,patchFetch:()=>v,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>f});var r={};s.r(r),s.d(r,{GET:()=>d,PUT:()=>p});var a=s(5419),n=s(9108),i=s(9678),o=s(8070);let u={1:{id:"1",theme:"light",notifications:{email:!0,push:!0,marketing:!1},integrations:{spotify:!0,youtube:!1,github:!0},security:{twoFactorEnabled:!1,lastPasswordChange:"2024-02-01"}}};async function d(t,{params:e}){try{let t=u[e.id];if(!t)return o.Z.json({error:"Settings not found"},{status:404});return o.Z.json(t,{status:200})}catch(t){return o.Z.json({error:"Failed to fetch settings"},{status:500})}}async function p(t,{params:e}){try{return await t.json(),o.Z.json({message:"Settings updated successfully"},{status:200})}catch(t){return o.Z.json({error:"Failed to update settings"},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/users/[id]/settings/route",pathname:"/api/users/[id]/settings",filename:"route",bundlePath:"app/api/users/[id]/settings/route"},resolvedPagePath:"C:\\Users\\Admin\\Desktop\\plus1-mvp-base-main\\src\\app\\api\\users\\[id]\\settings\\route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:l,staticGenerationAsyncStorage:g,serverHooks:h,headerHooks:m,staticGenerationBailout:f}=c,y="/api/users/[id]/settings/route";function v(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:g})}}};var e=require("../../../../../webpack-runtime.js");e.C(t);var s=t=>e(e.s=t),r=e.X(0,[638,206],()=>s(5957));module.exports=r})();